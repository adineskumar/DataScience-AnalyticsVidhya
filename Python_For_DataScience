-------------------------------------------------------------------------------------
Reference : https://courses.analyticsvidhya.com/courses/introduction-to-data-science
Support	  : discuss.analyticsvidhya.com
-------------------------------------------------------------------------------------
EXPECTATION FROM THE COURSE
-------------------------------------------------------------------------------------
This course is divided into the below sections:

	1.Introduction to Python
	2.Understanding Operators
	3.Variables and Data Types
	4.Conditional Statements
	5.Looping Constructs
	6.Functions
	7.Data Structure
	8.Lists
	9.Dictionaries
   10.Understanding Standard Libraries in Python
   11.Reading a CSV File in Python
   12.Data Frames and basic operations with Data Frames
   13.Indexing a Data Frame
   
1.Introduction to Python
-----------------------------------------------------------------------------------------
	-- Gives you basic idea about Python for Data Science
	-- Aimed for Beginners
	-- Its Open Source, general purpose language
	-- It has very large collaborative developer community
	-- Includes extensive number of packages 
	
Python Basics
-----------------------------------------------------------------------------------------
Topics inluded 
	-- Operators
	-- Variable and its naming conventions
	-- Data Types in Python
	-- Conditional Statements
	-- Looping Statements
	-- Functions
	-- Packages in Python
	-- Pandas library in Python
	
2. Operators
-----------------------------------------------------------------------------------------
	-- Symbolic Representationns of Mathematical Task
	-- Types of Operators
		-- Arithmetic  -- Add, Subtract, Multiply and Divide, etc
		-- Comparison  -- >, <, >=, <=, ==, !=
		-- Logical	   -- and, or, not

3. Variables
-----------------------------------------------------------------------------------------
	-- Variables are Named representation of objects
	-- Python is case sensitive 
		-- so a = 5 and A = 5 are not the same
		-- variable cannot start with special character other than underscore
			-- _sam = 1 is valid
			-- #sam = 1 is not valid
		-- variable name cannot start with a number
			-- 7sam = 1 is not valid

4. Data Types
-----------------------------------------------------------------------------------------
	-- Data Types
		-- int
		-- float
		-- string
		-- bool
		
	-- type('X') gives the data type of an object
	
5. Conditional Statements
-----------------------------------------------------------------------------------------
	-- if(condition):
			statement1
	   elid(condition):
			statement2
	   else:
			statement3

6. Looping Constructs
-----------------------------------------------------------------------------------------
	--	for i in range(2.0):			==> gives error
			print(i)
	
	--  for in '':
			print(i)					==> prints nothing
			
	--  for i in range(10,16,1):		==> print all the numbers from 10 to 15
			print(i)

7. Functions
-----------------------------------------------------------------------------------------
	-- Helps in re-usage of the code
	-- Two types 
		-- Built-in Functions
		-- User Defined Functions
		
	-- def function_name(Arguments):
			statement 1
			statement 2
			return statement
	
	
	for i in range(101,200,2):
    print(i)
    

	def big(x,y):
		if (x > y):
			print(x)
		else:
			print(y)

	big(2,3)

	def odd(a):
		if a%2==0:
			print("not odd")
		else:
			print("odd")
			
			
	odd(9)

	def min(a, b):
			if (a > b):
				return b
			elif (a == b):
				return 'The numbers are equal'
			else:
				return a
			

	min(200,200)
	
7. Data Structures
----------------------------------------------------------------------------------------------------
	-- Lists
	-- Dictionaries

8. Lists
----------------------------------------------------------------------------------------------------
	-- What is List?
		-- List is an ordered data structure with elements separated by comma enclosed by square brackets
		-- List can have elements of different data types in a single list
		-- List uses indexes for each element starting from zero
			-- Example 1 -- List1 = [1,2,3,4]							==> Single Data Type ==> Only Int
			-- Example 2 -- List2 = ['Welcome', 'to','Data Science']	==> Single Data Type ==> Only String
			-- Example 3 -- List3 = [1,'wow',1.5,'way to succeed']      ==> Mixed Data Types
			
	-- Subsetting a List
		-- Extracting a single element by using the index
			-- Example 	-- List3 = [1,'wow',1.5,'way to succeed']
						-- List3[1] ==> 'wow'
		-- Extracting a sequence of elements 
			-- Example 	-- List3 = [1,'wow',1.5,'way to succeed']
						-- List3[1:3] ==> 'wow',1.5
		-- Extracting elements using the negative index
			-- Example 	-- List3 = [1,'wow',1.5,'way to succeed']
						-- List3[-1] ==> 'way to succeed'		
	
	-- Adding an element into a List using append
		-- Example 	-- List3 = [1,'wow',1.5,'way to succeed']
					-- List3.append(3) ==> [1,'wow',1.5,'way to succeed',3]
					
	-- Adding multiple element into a list using extend
		-- Example 	-- List3 = [1,'wow',1.5,'way to succeed',3]
					-- List3.extend([5,6]) ==> [1,'wow',1.5,'way to succeed',3,5,6]
					
	-- Adding a List to a list using append
		-- Example 	-- List3 = [1,'wow',1.5,'way to succeed',3,5,6]
					-- List3.append([5,6]) ==> [1,'wow',1.5,'way to succeed',[5,6]]
	
	-- Deleting an element from a list using element itself
		-- Example  -- List3 = [1,'wow',1.5,'way to succeed',3,5,6]
				    -- List3.remove(3) ==> [1,'wow',1.5,'way to succeed',5,6]
	
	-- Deleting an element using its index
		-- Example  -- List3 = [1,'wow',1.5,'way to succeed',3,5,6]
				    -- del List3[4] ==> [1,'wow',1.5,'way to succeed',5,6]
	
	-- Looping over a List
		-- Example  -- List3 = [1,'wow',1.5,'way to succeed',3,5,6]
					-- for i in List3:
							print(i)

9. Dictionaries
----------------------------------------------------------------------------------------------------
	--	Unordered set of Key Values enclosed with {}, elements are separated by comma
		--	Example --	Dict1 = {'Dinesh' : 1000, 'Ganesh' : 2000}
					--	Dict2 = {'Dinesh' : [1,2], 'Ganesh' : [3,4]}
				
	--  Adding an element to a dictionary
		--	Example -- Dict1['Prakash'] = 3000 ==> {'Dinesh' : 1000, 'Ganesh' : 2000, 'Prakash' : 3000}
	
	-- Adding multiple elements from a dictionary
		-- Example	-- Dict1.update({'Venkat':4000,'Sathish':5000}) ==> {'Dinesh' : 1000, 'Ganesh' : 2000, 'Prakash' : 3000, 'Venkat':4000,'Sathish':5000}
		
	-- Deleting an element from a dictionary
		-- Example 	-- del Dict1['Sathish'] ==> {'Dinesh' : 1000, 'Ganesh' : 2000, 'Prakash' : 3000, 'Venkat':4000}
